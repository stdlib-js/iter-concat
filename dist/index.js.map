{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over the values of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterConcat() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Note: if provided non-empty iterators, this loop executes at most twice...\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'value': v.value,\n\t\t\t\t\t\t\t'done': true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\n\t\t\t\t// Note: we ignore iterator return values except for the final iterator...\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterConcat.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterConcat;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iterates over the values of two or more iterators.\n*\n* @module @stdlib/iter-concat\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterConcat = require( '@stdlib/iter-concat' );\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAa,QAAS,4BAA6B,EACnDC,EAAiB,QAAS,iCAAkC,EAC5DC,EAAa,QAAS,iCAAkC,EACxDC,EAAiB,QAAS,yBAA0B,EACpDC,EAAS,QAAS,uBAAwB,EAqC9C,SAASC,GAAa,CACrB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAH,EAAQ,UAAU,OACbA,EAAQ,EACZ,MAAM,IAAI,MAAO,6DAA8D,EAGhF,IADAF,EAAY,CAAC,EACPK,EAAI,EAAGA,EAAIH,EAAOG,IAAM,CAC7B,GAAK,CAACV,EAAgB,UAAWU,CAAE,CAAE,EACpC,MAAM,IAAI,UAAWP,EAAQ,qGAAsGO,EAAG,UAAWA,CAAE,CAAE,CAAE,EAExJL,EAAU,KAAM,UAAWK,CAAE,CAAE,CAChC,CAOA,GALAF,EAAO,CAAC,EACRV,EAAaU,EAAM,OAAQG,CAAK,EAChCb,EAAaU,EAAM,SAAUI,CAAI,EAG5BV,EAAiB,CACrB,IAAMQ,EAAI,EAAGA,EAAIH,EAAOG,IACvB,GAAK,CAACX,EAAYM,EAAWK,CAAE,EAAGR,CAAe,CAAE,EAAI,CACtDO,EAAM,GACN,KACD,CAEKA,GACLX,EAAaU,EAAMN,EAAgBW,CAAQ,CAE7C,CACA,OAAAP,EAAWD,EAAW,CAAE,EACxBI,EAAM,GACNC,EAAI,EACGF,EAQP,SAASG,GAAO,CACf,IAAIG,EACJ,GAAKL,EACJ,MAAO,CACN,KAAQ,EACT,EAGD,KACCK,EAAIR,EAAS,KAAK,EACbQ,EAAE,MAAO,CAEb,GADAJ,GAAK,EACAA,IAAMH,EAEV,OADAE,EAAM,GACDR,EAAYa,EAAG,OAAQ,EACpB,CACN,MAASA,EAAE,MACX,KAAQ,EACT,EAEM,CACN,KAAQ,EACT,EAEDR,EAAWD,EAAWK,CAAE,CAGzB,CAID,MAAO,CACN,MAASI,EAAE,MACX,KAAQ,EACT,CACD,CASA,SAASF,EAAKG,EAAQ,CAErB,OADAN,EAAM,GACD,UAAU,OACP,CACN,MAASM,EACT,KAAQ,EACT,EAEM,CACN,KAAQ,EACT,CACD,CAQA,SAASF,GAAU,CAClB,IAAIG,EACAN,EAGJ,IADAM,EAAO,CAAC,EACFN,EAAI,EAAGA,EAAIH,EAAOG,IACvBM,EAAK,KAAMX,EAAWK,CAAE,EAAGR,CAAe,EAAE,CAAE,EAE/C,OAAOE,EAAW,MAAO,KAAMY,CAAK,CACrC,CACD,CAKAnB,EAAO,QAAUO,ICzIjB,IAAIa,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "setReadOnly", "isFunction", "isIteratorLike", "hasOwnProp", "iteratorSymbol", "format", "iterConcat", "iterators", "iterator", "niter", "iter", "FLG", "i", "next", "end", "factory", "v", "value", "args", "main"]
}
